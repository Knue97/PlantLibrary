<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSourceSpied" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
      <property name="url" value="jdbc:mysql://localhost:3306/plantlibrary"></property>
      <property name="username" value="maker"></property>
      <property name="password" value="123456"></property>
   	</bean>
   	
   	<!-- db Log추가 -->
 	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource"> 
	     <constructor-arg ref="dataSourceSpied" /> 
	     <property name="logFormatter"> 
	         <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter"> 
	             <property name="loggingType" value="MULTI_LINE" /> 
	             <property name="sqlPrefix" value="SQL : "/> 
	         </bean> 
	     </property> 
	 </bean> 
   
   	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:mappers/**/*.xml"></property>   		
   	</bean>
   	
   	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache" >
   		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
   	</bean>
   	<!-- 이메일 인증 관련 빈 등록 -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.naver.com" />
      <property name="port" value="465" />
      <property name="username" value="rudtjqdnekd" />
      <property name="password" value="Dnekdxkdxkd1!" />
      <property name="javaMailProperties">
         <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.naver.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
      </property>
	</bean>
   	
   	<context:component-scan base-package="kr.co.plantlibrary.plant_encyclopedia"></context:component-scan>
   	<context:component-scan base-package="kr.co.plantlibrary.login"></context:component-scan>
   	<context:component-scan base-package="kr.co.plantlibrary.board"></context:component-scan>
   
   	
   	
</beans>
